# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [
      (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "nvme" "xhci_pci" "ahci" "usb_storage" "usbhid" "sd_mod" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-amd" ];
  boot.extraModulePackages = [ ];

  # resume device is a swapfile on btrfs
  # get the offset:
  #   $ btrfs inspect-internal map-swapfile swapfile
  boot.resumeDevice = "/dev/disk/by-uuid/75901033-2819-4f9c-8c8a-00432efc78de";
  boot.kernelParams = [ "resume_offset=183326153" ];

  fileSystems."/" =
    {
      device = "/dev/disk/by-uuid/75901033-2819-4f9c-8c8a-00432efc78de";
      fsType = "btrfs";
      options = [ "subvol=@" ];
    };

  fileSystems."/home/glaumar/DATA" =
    {
      device = "/dev/disk/by-uuid/2d91023f-b583-46e0-bdbd-3bdfbacafc31";
      fsType = "ext4";
      options = [ "defaults" "noatime" "data=ordered" "nofail" ];
    };

  fileSystems."/boot" =
    {
      device = "/dev/disk/by-uuid/9579-212A";
      fsType = "vfat";
      options = [ "fmask=0022" "dmask=0022" ];
    };


  # https://btrfs.readthedocs.io/en/latest/Swapfile.html
  #
  # create a swapfile on btrfs:
  #   $ btrfs filesystem mkswapfile --size 48G swapfile
  #
  # get the offset:
  #   $ btrfs inspect-internal map-swapfile swapfile
  swapDevices = [{
    device = "/swapfile";
    size = 48 * 1024;
  }];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp5s0.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp4s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
